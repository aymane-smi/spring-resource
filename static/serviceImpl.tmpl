import {{.SharedPom.GroupId}}.{{.SharedPom.ArtifactId}}.Services.Impl;
import org.springframework.stereotype.Service;

import {{.SharedPom.GroupId}}.{{.SharedPom.ArtifactId}}.exceptions.ResourceNotFoundException;
import {{.SharedPom.GroupId}}.{{.SharedPom.ArtifactId}}.dto.{{.SharedEntity.Name}}Dto;
import {{.SharedPom.GroupId}}.{{.SharedPom.ArtifactId}}.Models.{{.SharedEntity.Name}};
import {{.SharedPom.GroupId}}.{{.SharedPom.ArtifactId}}.Repositories.{{.SharedEntity.Name}}Repository;
import {{.SharedPom.GroupId}}.{{.SharedPom.ArtifactId}}.Services.{{.SharedEntity.Name}}Service;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;
import org.modelmapper.ModelMapper;

@Service
@AllArgsConstructor
@NoArgsConstructor
public class {{.SharedEntity.Name}}ServiceImpl implements {{.SharedEntity.Name}}Service{
    private {{.SharedEntity.Name}}Repository {{.SharedEntity.Name}}Repository;
    private ModelMapper modelMapper;

    @Override
    public {{.SharedEntity.Name}}Dto save({{.SharedEntity.Name}}Dto {{.SharedEntity.NameLower}}Dto) {
        {{.SharedEntity.Name}} {{.SharedEntity.NameLower}}Request = modelMapper.map({{.SharedEntity.NameLower}}Dto, {{.SharedEntity.Name}}.class);
        {{.SharedEntity.Name}} {{.SharedEntity.NameLower}} = {{.SharedEntity.NameLower}}Repository.save({{.SharedEntity.NameLower}}Request);
        return modelMapper.map({{.SharedEntity.NameLower}}, {{.SharedEntity.Name}}Dto.class);
    }
}